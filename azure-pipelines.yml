trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- checkout: self
  fetchDepth: 0  # Full Git clone to ensure git log works

- task: NodeTool@0
  inputs:
    versionSpec: '22.x'
  displayName: 'Install Node.js'

- script: |
    npm install
    npm start &
    sleep 5  # Wait briefly to ensure the app starts
  displayName: 'npm install and start'
  env:
    PERPLEXITY_API_KEY: $(PERPLEXITY_API_KEY)
    PORT: $(PORT)
    NODE_ENV: $(NODE_ENV)
    ALPHA_VANTAGE_API_KEY: $(ALPHA_VANTAGE_API_KEY)
    POLYGON_API_KEY: $(POLYGON_API_KEY)

- script: |
    BUILD_STATUS=$(if [ "$(Build.Status)" == "Succeeded" ]; then echo "Succeeded"; else echo "Failed"; fi)
    DEPLOY_TIME=$(date +"%Y-%m-%d %H:%M:%S")
    COMMIT_AUTHOR=$(git log --format='%an' -n 1)
    COMMIT_MESSAGE=$(git log --format='%B' -n 1 | tr -d '\n"\\`')
    MSG="Azure deploy finished!\n\nDeploy details:\nBuild Status: $BUILD_STATUS\nPipeline: $(Build.DefinitionName)\nBranch: $(Build.SourceBranchName)\nDeploy Time: $DEPLOY_TIME\nCommit Author: $COMMIT_AUTHOR\nCommit Message: $COMMIT_MESSAGE\nTriggered by: $(Build.RequestedFor)\nURL: $(Build.BuildUri)"
    curl -s -X POST \
      -H 'Content-Type: application/json' \
      -d "{\"chat_id\": \"$(TELEGRAM_CHAT_ID)\", \"text\": \"$MSG\"}" \
      "https://api.telegram.org/bot$(TELEGRAM_BOT_TOKEN)/sendMessage"
  displayName: 'Send Telegram Notification'
  env:
    TELEGRAM_BOT_TOKEN: $(TELEGRAM_BOT_TOKEN)
    TELEGRAM_CHAT_ID: $(TELEGRAM_CHAT_ID)
  condition: always()

- script: |
    echo "Pipeline completed successfully! Artifacts ready for Azure App Service deployment."
  displayName: 'Finish: Log pipeline completion'
  condition: succeeded()